webpackHotUpdate("main",{

/***/ "./src/index.ts":
/*!**********************!*\
  !*** ./src/index.ts ***!
  \**********************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar PIXI = __webpack_require__(/*! pixi.js */ \"./node_modules/pixi.js/dist/esm/pixi.js\");\r\nvar app = new PIXI.Application({\r\n    width: 960, height: 550, backgroundColor: 0x1099bb, resolution: window.devicePixelRatio || 1,\r\n});\r\ndocument.body.appendChild(app.view);\r\nvar credits = 5000;\r\nvar betAmount = 1;\r\n// create a new background\r\nvar background = PIXI.Sprite.from('assets/BGSlotMachine.png');\r\nbackground.width = app.screen.width - 300;\r\nbackground.height = app.screen.height;\r\nbackground.x = (app.screen.width - background.width) / 2;\r\napp.stage.addChild(background);\r\n// create a new background slot machine\r\nvar barSlotMachine = PIXI.Sprite.from('assets/BarsSlotMachine.png');\r\nbarSlotMachine.width = app.screen.width - 300;\r\nbarSlotMachine.height = app.screen.height;\r\nbarSlotMachine.x = (app.screen.width - barSlotMachine.width) / 2;\r\napp.stage.addChild(barSlotMachine);\r\napp.loader\r\n    .add('assets/Symbol10.png', 'assets/Symbol10.png')\r\n    .add('assets/SymbolA.png', 'assets/SymbolA.png')\r\n    .add('assets/SymbolCaptain.png', 'assets/SymbolCaptain.png')\r\n    .add('assets/SymbolJ.png', 'assets/SymbolJ.png')\r\n    .add('assets/SymbolK.png', 'assets/SymbolK.png')\r\n    .add('assets/SymbolQ.png', 'assets/SymbolQ.png')\r\n    .add('assets/SymbolParrot.png', 'assets/SymbolParrot.png')\r\n    .add('assets/SymbolRum.png', 'assets/SymbolRum.png')\r\n    .add('assets/SymbolSkull.png', 'assets/SymbolSkull.png')\r\n    .add('assets/SymbolTreasure.png', 'assets/SymbolTreasure.png')\r\n    .load(onAssetsLoaded);\r\nvar REEL_WIDTH = (app.screen.width - 300) / 5;\r\nvar SYMBOL_SIZE = (app.screen.width - 300) / 5;\r\nfunction onAssetsLoaded() {\r\n    // Create different slot symbols.\r\n    var slotTextures = [\r\n        PIXI.Texture.from('assets/Symbol10.png'),\r\n        PIXI.Texture.from('assets/SymbolA.png'),\r\n    ];\r\n    // const names = [\"Symbol10\", \"SymbolA\", \"SymbolCaptain\", \"SymbolJ\", \"SymbolK\", \"SymbolQ\", \"SymbolParrot\", \"SymbolSkull\", \"SymbolTreasure\"];\r\n    // Build the reels\r\n    var reels = [];\r\n    var reelContainer = new PIXI.Container();\r\n    for (var i = 0; i < 5; i++) {\r\n        var rc = new PIXI.Container();\r\n        rc.x = (i * REEL_WIDTH) - 150;\r\n        reelContainer.addChild(rc);\r\n        var reel = {\r\n            container: rc,\r\n            symbols: [],\r\n            position: 0,\r\n            previousPosition: 0,\r\n            blur: new PIXI.filters.BlurFilter(),\r\n        };\r\n        reel.blur.blurX = 0;\r\n        reel.blur.blurY = 0;\r\n        rc.filters = [reel.blur];\r\n        // Build the symbols\r\n        for (var j = 0; j < 4; j++) {\r\n            var randomPick = Math.floor(Math.random() * slotTextures.length);\r\n            var symbol = new PIXI.Sprite(slotTextures[randomPick]);\r\n            // Scale the symbol to fit symbol area.\r\n            symbol.y = j * SYMBOL_SIZE;\r\n            symbol.scale.x = symbol.scale.y = Math.min(SYMBOL_SIZE / symbol.width, SYMBOL_SIZE / symbol.height);\r\n            symbol.x = Math.round((SYMBOL_SIZE - symbol.width) / 2);\r\n            reel.symbols.push(symbol);\r\n            rc.addChild(symbol);\r\n            // console.log(i, \") \", j, \") \",symbol.texture.textureCacheIds[0])\r\n        }\r\n        reels.push(reel);\r\n    }\r\n    console.log(reels);\r\n    app.stage.addChild(reelContainer);\r\n    // Build top & bottom covers and position reelContainer\r\n    var margin = (app.screen.height - SYMBOL_SIZE * 3) / 2;\r\n    reelContainer.y = margin;\r\n    reelContainer.x = Math.round(app.screen.width - REEL_WIDTH * 5);\r\n    var top = new PIXI.Graphics();\r\n    top.beginFill(0, 1);\r\n    top.drawRect(0, 0, app.screen.width, margin);\r\n    var bottom = new PIXI.Graphics();\r\n    bottom.beginFill(0, 1);\r\n    bottom.drawRect(0, SYMBOL_SIZE * 3 + margin, app.screen.width, margin);\r\n    // create a background header\r\n    var headerBg = PIXI.Sprite.from('assets/BGTopBar.png');\r\n    headerBg.height = 100;\r\n    headerBg.x = 0;\r\n    headerBg.y = 0;\r\n    top.addChild(headerBg);\r\n    // Add header logo\r\n    var headerLogo = PIXI.Sprite.from('assets/Logo.png');\r\n    headerLogo.height = 90;\r\n    headerLogo.width = 400;\r\n    headerLogo.x = Math.round((top.width - headerLogo.width) / 2);\r\n    headerLogo.y = Math.round((90 - headerLogo.height) / 2);\r\n    top.addChild(headerLogo);\r\n    // Add Credit showcase\r\n    var crediIcon = PIXI.Sprite.from('assets/Coins.png');\r\n    crediIcon.height = 50;\r\n    crediIcon.width = 50;\r\n    crediIcon.x = app.screen.width - 10 - crediIcon.width;\r\n    crediIcon.y = Math.round((margin - crediIcon.height) / 2);\r\n    top.addChild(crediIcon);\r\n    // Credit amount\r\n    var style = new PIXI.TextStyle({\r\n        fontFamily: 'Arial',\r\n        fontSize: 15,\r\n        // fontWeight: 'bold',\r\n        fill: \"#fff\",\r\n        dropShadow: false,\r\n    });\r\n    var creditLeftText = new PIXI.Text(credits.toString(), style);\r\n    creditLeftText.x = app.screen.width - 10 - crediIcon.width - creditLeftText.width;\r\n    creditLeftText.y = Math.round((margin - creditLeftText.height) / 2);\r\n    top.addChild(creditLeftText);\r\n    app.stage.addChild(top);\r\n    app.stage.addChild(bottom);\r\n    // create a background footer\r\n    var footerBg = PIXI.Sprite.from('assets/BGBottomBar.png');\r\n    footerBg.height = 100;\r\n    footerBg.x = 0;\r\n    footerBg.y = app.screen.height - footerBg.height;\r\n    bottom.addChild(footerBg);\r\n    // create a start button\r\n    var startBtn = new PIXI.Graphics();\r\n    startBtn.beginFill(0, 1);\r\n    startBtn = PIXI.Sprite.from('assets/ButtonStartActive.png');\r\n    startBtn.height = 70;\r\n    startBtn.width = 130;\r\n    startBtn.x = app.screen.width - 10 - startBtn.width;\r\n    startBtn.y = app.screen.height - 5 - startBtn.height;\r\n    bottom.addChild(startBtn);\r\n    // Max Bet Button\r\n    var maxBetBtn = new PIXI.Graphics();\r\n    maxBetBtn.beginFill(0, 1);\r\n    maxBetBtn = PIXI.Sprite.from('assets/ButtonMax.png');\r\n    maxBetBtn.height = 35;\r\n    maxBetBtn.width = 80;\r\n    maxBetBtn.x = app.screen.width - 300 - maxBetBtn.width;\r\n    maxBetBtn.y = app.screen.height - 20 - maxBetBtn.height;\r\n    bottom.addChild(maxBetBtn);\r\n    // Bet increase button\r\n    var incBetBtn = new PIXI.Graphics();\r\n    incBetBtn.beginFill(0, 1);\r\n    incBetBtn = PIXI.Sprite.from('assets/ButtonPlus.png');\r\n    incBetBtn.height = 35;\r\n    incBetBtn.width = 35;\r\n    incBetBtn.x = app.screen.width - 300 - incBetBtn.width - maxBetBtn.width;\r\n    incBetBtn.y = app.screen.height - 20 - incBetBtn.height;\r\n    bottom.addChild(incBetBtn);\r\n    // Bet decrease button\r\n    var decBetBtn = new PIXI.Graphics();\r\n    decBetBtn.beginFill(0, 1);\r\n    decBetBtn = PIXI.Sprite.from('assets/ButtonMinus.png');\r\n    decBetBtn.height = 35;\r\n    decBetBtn.width = 35;\r\n    decBetBtn.x = app.screen.width - 300 - decBetBtn.width - maxBetBtn.width - incBetBtn.width;\r\n    decBetBtn.y = app.screen.height - 20 - decBetBtn.height;\r\n    bottom.addChild(decBetBtn);\r\n    // Bet amount show\r\n    var style2 = new PIXI.TextStyle({\r\n        fontFamily: 'Arial',\r\n        fontSize: 25,\r\n        fontWeight: 'bold',\r\n        fill: \"#fff\",\r\n        dropShadow: false,\r\n    });\r\n    var betAmountShow = new PIXI.Text(betAmount.toString(), style2);\r\n    betAmountShow.x = app.screen.width - 300 - decBetBtn.width - maxBetBtn.width - decBetBtn.width - incBetBtn.width - betAmountShow.width;\r\n    betAmountShow.y = app.screen.height - 25 - betAmountShow.height;\r\n    bottom.addChild(betAmountShow);\r\n    // create a bet written text\r\n    var betText = PIXI.Sprite.from('assets/TextBet.png');\r\n    betText.height = 35;\r\n    betText.width = 60;\r\n    betText.x = app.screen.width - 300 - decBetBtn.width - maxBetBtn.width - decBetBtn.width - incBetBtn.width - betAmountShow.width - betText.width - 50;\r\n    betText.y = app.screen.height - 20 - betText.height;\r\n    bottom.addChild(betText);\r\n    // Set the interactivity.\r\n    startBtn.interactive = true;\r\n    startBtn.buttonMode = true;\r\n    startBtn.addListener('pointerdown', function () {\r\n        startPlay();\r\n    });\r\n    // Set bet max\r\n    maxBetBtn.interactive = true;\r\n    maxBetBtn.buttonMode = true;\r\n    maxBetBtn.addListener('pointerdown', function () {\r\n        if (credits > betAmount) {\r\n            betAmount = credits;\r\n            updateBetAmount(betAmount);\r\n        }\r\n    });\r\n    // Set bet max\r\n    incBetBtn.interactive = true;\r\n    incBetBtn.buttonMode = true;\r\n    incBetBtn.addListener('pointerdown', function () {\r\n        if (credits > betAmount) {\r\n            betAmount++;\r\n            updateBetAmount(betAmount);\r\n        }\r\n    });\r\n    // Set bet max\r\n    decBetBtn.interactive = true;\r\n    decBetBtn.buttonMode = true;\r\n    decBetBtn.addListener('pointerdown', function () {\r\n        if (betAmount > 1 && betAmount <= credits) {\r\n            betAmount--;\r\n            updateBetAmount(betAmount);\r\n        }\r\n    });\r\n    var running = false;\r\n    // Function to start playing.\r\n    function startPlay() {\r\n        if (running) {\r\n            startBtn = PIXI.Sprite.from('assets/ButtonStart.png');\r\n            return;\r\n        }\r\n        running = true;\r\n        credits -= betAmount;\r\n        updateCredit(credits);\r\n        for (var i = 0; i < reels.length; i++) {\r\n            var r = reels[i];\r\n            var extra = Math.floor(Math.random() * 3);\r\n            var target = r.position + 10 + i * 5 + extra;\r\n            var time = 2500 + i * 600 + extra * 600;\r\n            tweenTo(r, 'position', target, time, backout(0.5), null, i === reels.length - 1 ? reelsComplete : null);\r\n        }\r\n    }\r\n    // Reels done handler.\r\n    function reelsComplete() {\r\n        running = false;\r\n        if (credits <= 0) {\r\n            bottom.removeChild(startBtn);\r\n            startBtn = PIXI.Sprite.from('assets/ButtonStart.png');\r\n            startBtn.height = 70;\r\n            startBtn.width = 130;\r\n            startBtn.x = app.screen.width - 10 - startBtn.width;\r\n            startBtn.y = app.screen.height - 5 - startBtn.height;\r\n            bottom.addChild(startBtn);\r\n        }\r\n    }\r\n    function updateBetAmount(amount) {\r\n        bottom.removeChild(betAmountShow);\r\n        betAmountShow = new PIXI.Text(amount.toString(), style2);\r\n        betAmountShow.x = app.screen.width - 300 - decBetBtn.width - maxBetBtn.width - decBetBtn.width - incBetBtn.width - betAmountShow.width;\r\n        betAmountShow.y = app.screen.height - 25 - betAmountShow.height;\r\n        bottom.addChild(betAmountShow);\r\n    }\r\n    function updateCredit(amount) {\r\n        top.removeChild(creditLeftText);\r\n        creditLeftText = new PIXI.Text(amount.toString(), style);\r\n        creditLeftText.x = app.screen.width - 10 - crediIcon.width - creditLeftText.width;\r\n        creditLeftText.y = Math.round((margin - creditLeftText.height) / 2);\r\n        top.addChild(creditLeftText);\r\n    }\r\n    // Listen for animate update.\r\n    app.ticker.add(function (delta) {\r\n        // Update the slots.\r\n        for (var i = 0; i < reels.length; i++) {\r\n            var r = reels[i];\r\n            // Update blur filter y amount based on speed.\r\n            // This would be better if calculated with time in mind also. Now blur depends on frame rate.\r\n            r.blur.blurY = (r.position - r.previousPosition) * 8;\r\n            r.previousPosition = r.position;\r\n            // Update symbol positions on reel.\r\n            for (var j = 0; j < r.symbols.length; j++) {\r\n                var s = r.symbols[j];\r\n                var prevy = s.y;\r\n                s.y = ((r.position + j) % r.symbols.length) * SYMBOL_SIZE - SYMBOL_SIZE;\r\n                if (s.y < 0 && prevy > SYMBOL_SIZE) {\r\n                    // Detect going over and swap a texture.\r\n                    // This should in proper product be determined from some logical reel.\r\n                    s.texture = slotTextures[Math.floor(Math.random() * slotTextures.length)];\r\n                    s.scale.x = s.scale.y = Math.min(SYMBOL_SIZE / s.texture.width, SYMBOL_SIZE / s.texture.height);\r\n                    s.x = Math.round((SYMBOL_SIZE - s.width) / 2);\r\n                    // console.log(i, j, s)\r\n                }\r\n            }\r\n        }\r\n    });\r\n}\r\n// Very simple tweening utility function. This should be replaced with a proper tweening library in a real product.\r\nvar tweening = [];\r\nfunction tweenTo(object, property, target, time, easing, onchange, oncomplete) {\r\n    var tween = {\r\n        object: object,\r\n        property: property,\r\n        propertyBeginValue: object[property],\r\n        target: target,\r\n        easing: easing,\r\n        time: time,\r\n        change: onchange,\r\n        complete: oncomplete,\r\n        start: Date.now(),\r\n    };\r\n    tweening.push(tween);\r\n    console.log(tween);\r\n    return tween;\r\n}\r\n// Listen for animate update.\r\napp.ticker.add(function (delta) {\r\n    var now = Date.now();\r\n    var remove = [];\r\n    for (var i = 0; i < tweening.length; i++) {\r\n        var t = tweening[i];\r\n        var phase = Math.min(1, (now - t.start) / t.time);\r\n        t.object[t.property] = lerp(t.propertyBeginValue, t.target, t.easing(phase));\r\n        if (t.change)\r\n            t.change(t);\r\n        if (phase === 1) {\r\n            t.object[t.property] = t.target;\r\n            if (t.complete)\r\n                t.complete(t);\r\n            remove.push(t);\r\n        }\r\n    }\r\n    for (var i = 0; i < remove.length; i++) {\r\n        tweening.splice(tweening.indexOf(remove[i]), 1);\r\n    }\r\n});\r\n// Basic lerp funtion.\r\nfunction lerp(a1, a2, t) {\r\n    return a1 * (1 - t) + a2 * t;\r\n}\r\n// Backout function from tweenjs.\r\n// https://github.com/CreateJS/TweenJS/blob/master/src/tweenjs/Ease.js\r\nfunction backout(amount) {\r\n    return function (t) { return (--t * t * ((amount + 1) * t + amount) + 1); };\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/index.ts\n");

/***/ })

})